#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Aug 08, 2018 11:59:29 AM


import sys
import tkMessageBox
from eclassify import predict
from mclassify import mpredict
from get1 import getReviews
from readcsv import readandclassify
import webbrowser
import detail


try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


#def napreprocess():
def txtcallback(event):
    input3=str(Entry3.get())
    wincsv=r'Result/'+input3+'.txt'

    webbrowser.open_new(wincsv)	

def callback(event):
    input3=str(Entry3.get())
    wincsv=r'Downloaded_Data/'+input3+'.csv'

    webbrowser.open_new(wincsv)
def new_win(root):
	input3=str(Entry3.get())
	win=Toplevel()
	font2="-family Padauk -size 15 -weight bold"
	font3="-family Padauk -size 12 -weight bold"
	_bgcolor="#EEEEEE"
	win.minsize(550,200)
	win.maxsize(550,200)
	win.configure(background=_bgcolor)
	Label1=Label(win,text="Click Here To See Downloaded Reviews",background=_bgcolor,cursor="hand2",foreground="blue",font=font2)
	Label1.place(relx=0.00,rely=0.00)
	Label1.bind("<Button-1>",callback)
	global winButton1
	global winButton2
	global winButton3
	global winButton4
	winButton1=Button(win,command=tokenize,text="Tokenize ")
	winButton1.place(relx=0.12,rely=0.30)
	winButton2=Button(win,command=removestopwords,text="Remove \nStopwords ")
	winButton2.place(relx=0.35,rely=0.30)
	winButton2.configure(state="disabled")
	winButton3=Button(win,command=csvreader,text="Classify ")
	winButton3.place(relx=0.81,rely=0.30)
	winButton3.configure(state="disabled")
	winButton4=Button(win,command=stemmlemma,text="Stem and \nLemmatize ")
	winButton4.place(relx=0.58,rely=0.30)
	winButton4.configure(state="disabled")
	
	
	global Label2
	Label2=Label(win,text=" ",background=_bgcolor,cursor="hand2",foreground="blue",font=font3)
	Label2.place(relx=0.5,rely=0.80)
	Label2.bind("<Button-1>",txtcallback)
	#clickhere.configure(text="")
	
	
	
def tokenize():
	input3=str(Entry3.get())
	detail.tokenize(input3)
	winButton1.configure(state="disabled")
	winButton2.configure(state="normal")
def removestopwords():
	input3=str(Entry3.get())
	detail.removestopwords(input3)
	winButton2.configure(state="disabled")
	winButton4.configure(state="normal")
def stemmlemma():
	input3=str(Entry3.get())
	detail.stemm(input3)
	winButton4.configure(state="disabled")
	winButton3.configure(state="normal")
	
	
#import unknown_support
def csvreader():
	input3=str(Entry3.get())
	Button2.configure(state="normal")
	Button2.place(relx=0.7, rely=0.20) 
	Button1.place(relx=-0.5, rely=-0.5)#so far away from standards but it make button invisible.
	Label1.configure(text='''''')
	Label2.configure(text="Click here to see classified result")
	readandclassify(input3)
	
	
	


def raise_frame(frame):
	frame.tkraise()
def appreviews():
	try:
	   
	   input3=int(Entry3.get())
	   #print input3
	   if len(str(input3))>=9:
		Button2.configure(state="disabled")
		review=getReviews(input3)
		#review=100
	        if review>=10:
		    Button1.place(relx=0.70, rely=0.40)
		    Label1.configure(text='''Reviews are already Occupied . Classify them now!''')
		    clickhere.configure(text='''click here to make the detail process''')
		    
		else:
		    Button2.configure(state="normal")
		    
			
		  

           else:
		tkMessageBox.showinfo('Alert',"ID must have at least 9 numbers")
 	except Exception as e :
	    print e
	    tkMessageBox.showinfo('Alert',"Enter correct ID")
	


def inputdata():
	input1=Entry1.get("1.0",'end-1c')
	#print input1
	if len(input1)<2:
		tkMessageBox.showinfo('Alert','Enter Data First')
	
	else:
		answer1,answer2,answer3=predict(input1)
		tkMessageBox.showinfo('Result',answer1)

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    root.option_add('*Dialog.msg.font','Helvetica 12')
    top = New_Toplevel (root)
    #unknown_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)
   # unknown_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
  
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor="#EEEEEE"
	_fontcolor="#000000"
	_btcolor="#73DEFE"
	font1="-family ZawgyiOne -size 10 -weight bold -slant italic"
	font2="-family Padauk -size 10 -weight bold"
	tfont="-family Georgia -size 14 -weight bold"

        #top.geometry("750x390+404+179")
        top.title("Text Classifier Application")
        top.configure(borderwidth="3")
        top.configure(background="#606060")
        top.configure(cursor="arrow")
       # top.configure(highlightbackground="#d84c68")
        #top.configure(highlightcolor="black")
	top.minsize(750,450)
	top.maxsize(750,450)


	self.Frame5 = Frame(top)
        self.Frame5.place(relx=0.28, rely=-0.03, relheight=1.06, relwidth=0.73)
        self.Frame5.configure(relief=GROOVE)
        self.Frame5.configure(borderwidth="2")
        self.Frame5.configure(relief=GROOVE)
        self.Frame5.configure(background="#ffffff")
        self.Frame5.configure(width=545)

	
	
	


        self.Frame1 = Frame(top)
        self.Frame1.place(relx=0.0, rely=-0.03, relheight=1.06, relwidth=0.29)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background=_bgcolor)
        self.Frame1.configure(width=215)

        

       

        self.Frame2 = Frame(top)
        self.Frame2.place(relx=0.28, rely=-0.03, relheight=1.06, relwidth=0.73)
        self.Frame2.configure(relief=GROOVE)
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief=GROOVE)
        self.Frame2.configure(background=_bgcolor)
        self.Frame2.configure(width=545)

	self.Frame4 = Frame(top)
        self.Frame4.place(relx=0.28, rely=-0.03, relheight=1.06, relwidth=0.73)
        self.Frame4.configure(relief=GROOVE)
        self.Frame4.configure(borderwidth="2")
        self.Frame4.configure(relief=GROOVE)
        self.Frame4.configure(background=_bgcolor)
        self.Frame4.configure(width=545)

	self.Frame12 = Frame(top)
        self.Frame12.place(relx=0.00, rely=-0.03,relheight=1.1, relwidth=1.2 )
        self.Frame12.configure(relief=GROOVE)
        #elf.Frame12.configure(borderwidth="2")
        self.Frame12.configure(relief=GROOVE)
        self.Frame12.configure(background=_btcolor)
        self.Frame12.configure(width=760,height=490)

        self.Label1 = Label(self.Frame2)
        self.Label1.place(relx=0.07, rely=0.10)
        self.Label1.configure(text='''This will classify Application reviews as positive or negative.''')
	self.Label1.configure(background=_bgcolor)
	self.Label1.configure(foreground=_fontcolor)
	self.Label1.configure(font="font2")

	

	self.Label1 = Label(self.Frame2)
        self.Label1.place(relx=0.10, rely=0.40)
        self.Label1.configure(text='''Enter text:''')
	self.Label1.configure(background=_bgcolor)
	self.Label1.configure(foreground=_fontcolor)

	



	
	global Entry1
        Entry1 = Text(self.Frame2)
        Entry1.place(relx=0.25, rely=0.40,height=100, width=200)
        Entry1.configure(background=_bgcolor)
	Entry1.configure(foreground=_fontcolor)
        Entry1.configure(font="TkFixedFont")
	Entry1.focus()

	
        #Entry2.configure(font="zawgyi")
	
	
	self.Button1 = Button(self.Frame2,command=inputdata)
        self.Button1.place(relx=0.7, rely=0.40)
        #self.Button1.configure(background=_btcolor)
	self.Button1.configure(foreground=_fontcolor)
        self.Button1.configure(text='''Classify''')
	
	



	
        

	


	self.Label1 = Label(self.Frame4)
        self.Label1.place(relx=0.10, rely=0.10)
        self.Label1.configure(text='''This will classify App reviews from Apple App Store.''')
	self.Label1.configure(background=_bgcolor)
	self.Label1.configure(foreground=_fontcolor)
	self.Label1.configure(font="font2")

	self.Label1 = Label(self.Frame4)
        self.Label1.place(relx=0.10, rely=0.20)
        self.Label1.configure(text='''Enter Application ID:''')
	self.Label1.configure(background=_bgcolor)
	self.Label1.configure(foreground=_fontcolor)

	global Entry3
        Entry3 = Entry(self.Frame4)
        Entry3.place(relx=0.4, rely=0.20,height=30,width=120)
        Entry3.configure(background=_bgcolor)
	Entry3.configure(foreground=_fontcolor)
	#Entry2.encode("utf-8")
        Entry3.configure(font="Padauk")

	global Button2
	Button2 = Button(self.Frame4,command=appreviews)
        Button2.place(relx=0.7, rely=0.20)
        #self.Button1.configure(background=_btcolor)
	Button2.configure(foreground=_fontcolor)
        Button2.configure(text='''Take Reviews''')

	global clickhere
	clickhere= Label(self.Frame4)
        clickhere.place(relx=0.5, rely=0.90)
	clickhere.configure(text='''click here to make the detail process''')
       
	clickhere.configure(background=_bgcolor,cursor="hand2")
	clickhere.configure(foreground="blue")
	clickhere.bind("<Button-1>", new_win)

	

	
	global Label1
	Label1 = Label(self.Frame4)
        Label1.place(relx=0.10, rely=0.40)
	Label1.configure(background=_bgcolor)
	Label1.configure(foreground=_fontcolor)
	
	
	global Button1
	Button1 = Button(self.Frame4,command=lambda:new_win(root))
        #Button1.configure(background=_btcolor)
	Button1.configure(foreground=_fontcolor)
        Button1.configure(text='''Classify''')

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.03, rely=0.03)
	self._img1 = PhotoImage(file="images/lo.png")
        self.Label1.configure(image=self._img1)
        self.Label1.configure(text='''image:''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)
	
	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.5,rely=0.03)
        self.Label1.configure(text='''Hoverboard Simulator''')
	self.Label1.configure(background="#ffffff",font="15")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.45, rely=0.10)
        self.Label1.configure(text='''App ID : 1116494563''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.3, rely=0.15)
        self.Label1.configure(text='''Use your fingers to simulate and guide your hoverboard \npast street obstacles''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.03, rely=0.25)
	self._img2 = PhotoImage(file="images/flip.png")
        self.Label1.configure(image=self._img2)
        self.Label1.configure(text='''image:''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)
	
	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.5,rely=0.27)
        self.Label1.configure(text='''Flip Master''')
	self.Label1.configure(background="#ffffff",font="15")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.45, rely=0.34)
        self.Label1.configure(text='''App ID : 1214283838''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.3, rely=0.4)
        self.Label1.configure(text='''Master the trampoline with Frontflips, Backflips, Gainers, Layouts, \nJumps and Bounces on your backyard''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.03, rely=0.5)
	self._img3 = PhotoImage(file="images/jump.png")
        self.Label1.configure(image=self._img3)
        self.Label1.configure(text='''image:''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)
	
	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.5,rely=0.52)
        self.Label1.configure(text='''Jumpy Penguin Swim''')
	self.Label1.configure(background="#ffffff",font="15")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.45, rely=0.58)
        self.Label1.configure(text='''App ID : 804642666''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.3, rely=0.64)
        self.Label1.configure(text='''Flap your fins to swim! Guide Jack past monsters \nand obstacles!''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)


	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.03, rely=0.75)
	self._img4 = PhotoImage(file="images/jumpy.png")
        self.Label1.configure(image=self._img4)
        self.Label1.configure(text='''image:''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)
	
	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.5,rely=0.77)
        self.Label1.configure(text='''Jumpy Jack''')
	self.Label1.configure(background="#ffffff",font="15")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.45, rely=0.82)
        self.Label1.configure(text='''App ID : 826459257''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame5)
        self.Label1.place(relx=0.3, rely=0.88)
        self.Label1.configure(text='''Jack is a skateboarding pro: help him show off his skills \nin this incredible adventure''')
	self.Label1.configure(background="#ffffff")
	self.Label1.configure(foreground=_fontcolor)
	
	



	
	self.Button1 = Button(self.Frame1,command=lambda:raise_frame(self.Frame2))
        self.Button1.place(relx=0.0, rely=0.33, height=150, width=209)
        self.Button1.configure(activebackground="#97E3EE")
	self.Button1.configure(background="#41D8EE")
	self.Button1.configure(foreground="#000000")
        self.Button1.configure(text='''Text Classifier''')
        self.Button1.configure(width=209)

        
	
	self.Button3 = Button(self.Frame1,command=lambda:raise_frame(self.Frame4))
        self.Button3.place(relx=0.0, rely=0.00, height=150, width=209)
        self.Button3.configure(activebackground="#97E3EE")
	self.Button3.configure(background="#41D8EE")
	self.Button3.configure(foreground="#000000")
        self.Button3.configure(text='''App Store Reviews Analyzer''')
        self.Button3.configure(width=209)

	self.Button4 = Button(self.Frame1,command=lambda:raise_frame(self.Frame5))
        self.Button4.place(relx=0.0, rely=0.66, height=150, width=209)
        self.Button4.configure(activebackground="#97E3EE")
	self.Button4.configure(background="#41D8EE")
	self.Button4.configure(foreground="#000000")
        self.Button4.configure(text='''Sample Application Info''')
        self.Button4.configure(width=209)

	self.Button4 = Button(self.Frame12,command=self.Frame12.destroy)
        self.Button4.place(relx=0.35, rely=0.7)
        self.Button4.configure(activebackground="#97E3EE")
	self.Button4.configure(background=_btcolor)
	self.Button4.configure(foreground="#000000")
        self.Button4.configure(text='''Let's Start''')

	

	self.Label1 = Label(self.Frame12)
        self.Label1.place(relx=0.02,rely=0.8)
        self.Label1.configure(text='''Supervised By \n Dr.Yi Yi Myint''')
	self.Label1.configure(background=_btcolor)
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame12)
        self.Label1.place(relx=0.68,rely=0.8)
        self.Label1.configure(text='''Developed By \n Mg Waiyan Myothet''')
	self.Label1.configure(background=_btcolor)
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame12)
        self.Label1.place(relx=0.2,rely=0.2)
        self.Label1.configure(text='''Sentiment Analysis Of Application Reviews \nUsing Multinomial Naive Bayes Classifier''')
	self.Label1.configure(background=_btcolor,font=tfont)
	self.Label1.configure(foreground=_fontcolor)

	self.Label1 = Label(self.Frame12)
        self.Label1.place(relx=0.30, rely=0.37)
	self._timg4 = PhotoImage(file="images/aa.png")
        self.Label1.configure(image=self._timg4)
        self.Label1.configure(text='''image:''')
	self.Label1.configure(background=_btcolor)
	self.Label1.configure(foreground=_fontcolor)

	
   
	



if __name__ == '__main__':
    vp_start_gui()

